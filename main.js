(()=>{var t={498:(t,e,r)=>{const n=r(643);t.exports=function(t=8){let e=[],r=[],a=[];const o=()=>{let t=!0;for(let r of e)0==r.isSunk()&&(t=!1);return!!t};return{ships:e,placeShip:(t,r,a,o)=>{const s=n((a-t||o-r)+1,t,r,a,o);return e.push(s),e},receiveAttack:(t,n)=>{let s=!0;for(let i of e){let e=i.getCoordinates();e.x1<=t&&e.x2>=t&&e.y1<=n&&e.y2>=n&&(r.push(i.hit(t-e.x1||n-e.y1)),s=!1,a.pop(),a.push({x1:e.x1,y1:e.y1,ships:i,won:o()}))}return s&&(a.pop(),a.push({x1:t,y1:n,ships:!1})),!s},areSunk:o,length:t,hits:r,something:a}}},507:(t,e,r)=>{const n=r(498);function a(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t)+t)}t.exports={method1:function(t){const e=[],r=n();return{attackBoard:(t,n=a(0,r.length),o=a(0,r.length))=>{for(let t of e)if(JSON.stringify(t)==JSON.stringify({x:n,y:o}))return;return e.push({x:n,y:o}),!!t.myGameBoard.receiveAttack(n,o)},myGameBoard:r}},method2:a}},643:t=>{t.exports=function(t,e,r,n,a){let o=[];const s=n-e?1:0;return o.length=t,o.fill(!1),{length:t,isSunk:()=>{let t=!0;return o.forEach((e=>{0==e&&(t=!1)})),t},hit:t=>(o[t]=!0,o),getCoordinates:()=>({x1:e,x2:n,y1:r,y2:a}),align:s,hitstatus:o}}},684:(t,e,r)=>{const n=r(507).method1,a=function(t,e){for(let r=0;r<e;r++){const e=document.createElement("div");e.classList.add("ship-boxes"),e.style.backgroundColor="rgba(255, 255, 255, 0.7)",t.append(e)}t.setAttribute("length",e),t.addEventListener("dragstart",(e=>{e.dataTransfer.setData("text/plain",t.className)}))},o=function(t,e){const r=document.querySelectorAll(".placed");for(let n of r){if(n==e)continue;const r=parseInt(n.parentElement.getAttribute("x")),a=parseInt(n.parentElement.getAttribute("y")),o=parseInt(n.getAttribute("length")),s=n.getAttribute("align"),i=parseInt(e.getAttribute("length")),l=parseInt(t.getAttribute("x")),d=parseInt(t.getAttribute("y")),c=e.getAttribute("align");for(let t=l-1;t<=l+i&&"true"==c;t++)for(let e=d-1;e<=d+1;e++)for(let n=0;n<o;n++){if(t==r+n&&e==a&&"true"==s)return!0;if(t==r&&e==a+n&&"false"==s)return!0}for(let t=l-1;t<=l+1&&"false"==c;t++)for(let e=d-1;e<=d+i;e++)for(let n=0;n<o;n++){if(t==r+n&&e==a&&"true"==s)return!0;if(t==r&&e==a+n&&"false"==s)return!0}}},s=function(){const t=n(),e=document.querySelectorAll(".placed");if(4!=e.length)return!1;for(let r of e){const e=parseInt(r.getAttribute("length")),n=r.getAttribute("align"),a=parseInt(r.parentElement.getAttribute("x")),o=parseInt(r.parentElement.getAttribute("y"));let s,i;"true"==n?(s=a+e-1,i=o):(i=o+e-1,s=a),t.myGameBoard.placeShip(a,o,s,i)}return t};t.exports={m1:function(){const t=document.querySelector(".container"),e=document.createElement("div");e.classList.add("black");const r=document.createElement("div");r.classList.add("form_header"),r.innerText="Place the Ships";const n=document.createElement("div");n.classList.add("form_box");const i=document.createElement("div");i.classList.add("form_grid");const l=document.createElement("div");l.classList.add("ships");const d=document.createElement("input");let c;d.type="submit",d.id="submit",d.value="Submit",d.onclick=async function(t){return t.preventDefault(),c=await s(),c},n.append(r,i,l,d),e.append(n),t.append(e),function(){const t=document.querySelector(".form_grid"),e=document.createElement("div");e.classList.add("box_holder"),e.style.height="288px",e.style.width="288px",t.append(e);for(let t=0;t<8;t++)for(let r=0;r<8;r++){const n=document.createElement("div");n.classList.add("formbox"),n.setAttribute("x",t),n.setAttribute("y",r),n.addEventListener("dragover",(t=>{t.preventDefault(),n.classList.add("drop-zone--over")})),n.addEventListener("dragleave",(t=>{t.preventDefault(),n.classList.remove("drop-zone--over")})),n.addEventListener("drop",(e=>{e.preventDefault();const a=e.dataTransfer.getData("text/plain"),s=document.getElementsByClassName(a)[0];parseInt(s.getAttribute("length"))+t>8&&"true"==s.getAttribute("align")||parseInt(s.getAttribute("length"))+r>8&&"false"==s.getAttribute("align")||o(n,s)?n.classList.remove("drop-zone--over"):(o(n,s),s.style.position="absolute",n.append(s),s.classList.add("placed"),n.classList.remove("drop-zone--over"),s.addEventListener("click",(t=>{t.preventDefault(),t.stopImmediatePropagation();const e=parseInt(s.parentElement.getAttribute("y"));"true"==s.getAttribute("align")&&parseInt(s.getAttribute("length"))-1+e<8?(s.style.transform="rotate(90deg)",s.style.transformOrigin=`${36*s.getAttribute("length")/2}px ${36*s.getAttribute("length")/2}px 0px`,s.setAttribute("align",!1),o(s.parentElement,s)&&(s.style.transform="",s.setAttribute("align",!0))):(s.style.transform="",s.setAttribute("align",!0),o(s.parentElement,s)&&(s.style.transform="rotate(90deg)",s.style.transformOrigin=`${34*s.getAttribute("length")/2}px ${34*s.getAttribute("length")/2}px 0px`,s.setAttribute("align",!1)))})))})),e.append(n)}}(),function(){const t=document.querySelector(".ships"),e=document.createElement("div");e.classList.add("fiver");const r=document.createElement("div");r.classList.add("fourer");const n=document.createElement("div");n.classList.add("threer");const o=document.createElement("div");o.classList.add("twoer"),t.append(e,r,n,o),e.setAttribute("draggable",!0),r.setAttribute("draggable",!0),n.setAttribute("draggable",!0),o.setAttribute("draggable",!0),e.setAttribute("align",!0),r.setAttribute("align",!0),n.setAttribute("align",!0),o.setAttribute("align",!0),a(e,5),a(r,4),a(n,3),a(o,2)}()},m2:s}}},e={};function r(n){var a=e[n];if(void 0!==a)return a.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}(()=>{const t=r(507).method1,e=r(684).m1,n=r(684).m2,a=r(507).method2;let o;e(),document.querySelector("#submit").onclick=function(t){if(t.preventDefault(),o=n(),o){const t=document.querySelector(".black");t.parentElement.removeChild(t),f()}};const s=function(t){const e=document.querySelector(".content"),r=document.createElement("div");r.classList.add("gridholder");const n=document.createElement("div");n.innerText=t,e.append(r),n.style.fontSize="2em";const a=document.createElement("div");for(a.classList.add("grid"),r.append(n,a),i=0;i<o.myGameBoard.length;i++)for(j=0;j<o.myGameBoard.length;j++){const e=document.createElement("div");if(e.classList.add("box",t),e.setAttribute("x-data",i),e.setAttribute("y-data",j),a.append(e),"AI"==t)e.onclick=function(){l(e)};else for(const t of o.myGameBoard.ships){const r=t.getCoordinates();i>=r.x1&&i<=r.x2&&j>=r.y1&&j<=r.y2&&(e.style.backgroundColor="grey")}}},l=function(t){const e=o.attackBoard(m,parseInt(t.getAttribute("x-data")),parseInt(t.getAttribute("y-data")));if(e){if(t.innerText="X",t.style.color="white",t.classList.add("used"),m.myGameBoard.areSunk())return void window.alert("Player1 has won")}else 0==e&&(t.innerText=".",t.style.color="white",t.classList.add("used"));d()},d=function(){const t=m.attackBoard(o);if(0==t){const t=o.myGameBoard.something[0].x1,e=o.myGameBoard.something[0].y1,r=document.querySelectorAll(".Player1");for(const n of r)n.getAttribute("x-data")==t&&n.getAttribute("y-data")==e&&(n.style.color="white",n.innerText=".",n.classList.add("used"))}else if(t){if(1==t){for(i=0;i<o.myGameBoard.something[0].ships.length;i++)if(o.myGameBoard.something[0].ships.hitstatus[i])if(o.myGameBoard.something[0].ships.hitstatus[i]&&1==o.myGameBoard.something[0].ships.align){const t=o.myGameBoard.something[0].x1+i,e=o.myGameBoard.something[0].y1,r=document.querySelectorAll(".Player1");for(const n of r)n.getAttribute("x-data")==t&&n.getAttribute("y-data")==e&&(n.style.color="white",n.innerText="X",n.classList.add("used"))}else if(o.myGameBoard.something[0].ships.hitstatus[i]&&0==o.myGameBoard.something[0].ships.align){const t=o.myGameBoard.something[0].y1+i,e=o.myGameBoard.something[0].x1,r=document.querySelectorAll(".Player1");for(const n of r)n.getAttribute("x-data")==e&&n.getAttribute("y-data")==t&&(n.style.color="white",n.innerText="X",n.classList.add("used"))}o.myGameBoard.areSunk()&&window.alert("AI has won")}}else d()},c=function(t,e,r,n,a){for(let o=t-1;o<=e+1;o++)for(let t=r-1;t<=n+1;t++)for(const e of a)if(e.x==o&&e.y==t)return!0;return!1},u=function(t,e,r,n,a){for(let o=t;o<=e;o++)for(let t=r;t<=n;t++)a.push({x:o,y:t});return a},m=function(){let e=[];const r=[];for(let t=0,n=5;t<4;t++,n--){let t,o,s,i;const l=a(0,2);do{if(t=a(0,8),o=a(0,8),1==l){for(;t+n-1>7;)t=a(0,8);s=t+n-1,i=o}else{for(;o+n-1>7;)o=a(0,8);i=o+n-1,s=t}}while(c(t,s,o,i,e));r.push({x1:t,x2:s,y1:o,y2:i}),e=u(t,s,o,i,e)}const n=t(!0);return r.forEach((t=>{n.myGameBoard.placeShip(t.x1,t.y1,t.x2,t.y2)})),n}(),f=function(){s("Player1"),s("AI")}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,